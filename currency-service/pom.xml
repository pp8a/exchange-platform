<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.fintech</groupId>
	<artifactId>currency-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>currency-service</name>
	<description>Reactive Currency Exchange Service with 
		Redis Cache, PostgreSQL, and MongoDB Event Sourcing</description>
	
	<properties>
		<java.version>21</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
	</properties>
	<dependencies>
		<!-- Actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Reactive MongoDB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.mongodb</groupId>
		    <artifactId>mongodb-driver-sync</artifactId>		    
		</dependency>
		<!-- Mongock Spring Boot Integration -->
		<dependency>
		    <groupId>io.mongock</groupId>
		    <artifactId>mongock-springboot-v3</artifactId>
		    <version>5.5.0</version>
		    <exclusions>
		        <exclusion>
		            <groupId>org.reflections</groupId>
		            <artifactId>reflections</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<!-- Mongock MongoDB Driver for Spring Data 4 -->
		<dependency>
		    <groupId>io.mongock</groupId>
		    <artifactId>mongodb-springdata-v4-driver</artifactId>
		    <version>5.5.0</version>
		    <exclusions>
		        <exclusion>
		            <groupId>org.reflections</groupId>
		            <artifactId>reflections</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<!-- Правильная версия Reflections -->
		<dependency>
		    <groupId>org.reflections</groupId>
		    <artifactId>reflections</artifactId>
		    <version>0.9.11</version>
		    <exclusions>
		        <exclusion>
		            <groupId>org.javassist</groupId>
		            <artifactId>javassist</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<!-- Явное подключение рабочей версии Javassist -->
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		    <version>3.29.0-GA</version>
		</dependency>				
		<!-- R2DBC (Reactive PostgreSQL) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>r2dbc-postgresql</artifactId>			    	    
		</dependency>
		<!-- Redis (Reactive) -->		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
		</dependency>
		<!-- Spring WebFlux -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<!-- Eureka Client -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!-- OpenFeign -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<!-- Hibernate Validator -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-validation</artifactId>
	    </dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>		
		<!-- MapStruct Core -->
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		    <version>1.5.5.Final</version>
		</dependency>		
		<!-- MapStruct Processor -->
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct-processor</artifactId>
		    <version>1.5.5.Final</version>
		    <scope>provided</scope>
		</dependency>
		<!-- Reactor Kafka -->
		<dependency>
		  <groupId>io.projectreactor.kafka</groupId>
		  <artifactId>reactor-kafka</artifactId>		  
		</dependency>
		<!-- Avro и Confluent Schema Registry -->
		<dependency>
		  <groupId>io.confluent</groupId>
		  <artifactId>kafka-avro-serializer</artifactId>
		  <version>7.5.1</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.avro</groupId>
		  <artifactId>avro</artifactId>
		  <version>1.11.1</version>
		</dependency>
		<!-- BCrypt.checkpw -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-crypto</artifactId>
		</dependency>
		<!-- Swagger (SpringDoc OpenAPI) configuration -->
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
		    <version>2.7.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<repositories>
	  <repository>
	    <id>confluent</id>
	    <url>https://packages.confluent.io/maven/</url>
	  </repository>
	</repositories>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
			  <groupId>org.apache.avro</groupId>
			  <artifactId>avro-maven-plugin</artifactId>
			  <version>1.11.1</version>
			  <executions>
			    <execution>
			      <phase>generate-sources</phase>
			      <goals>
			        <goal>schema</goal>
			      </goals>
			      <configuration>
			        <sourceDirectory>${project.basedir}/src/main/avro</sourceDirectory>
			        <outputDirectory>${project.build.directory}/target/generated-sources/avro</outputDirectory>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
		</plugins>
	</build>

</project>
