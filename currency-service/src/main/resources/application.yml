server:
  port: 8081

spring:
  application:
    name: currency-service

  # PostgreSQL (R2DBC)
  r2dbc:
    url: r2dbc:postgresql://postgres:5432/currency_db
    username: admin
    password: admin

  # MongoDB (Reactive)  
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/currency_events}
      database: currency_events
  # Redis (Reactive)
    redis:
      host: redis
      port: 6379 
      
  kafka:
    bootstrap-servers: kafka:9092
    properties:
      schema.registry.url: http://schema-registry:8081

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer

    consumer:
      group-id: transfer-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer    
  
mongock:
  enabled: true
  runner-type: initializingbean
  migration-scan-package: com.fintech.currency.migration
  
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    info:
      access: unrestricted

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs